///////////////////////////////////////////////////////////////////////////////
// RtStartTimeModule.cpp
#include "TcPch.h"
#pragma hdrstop

#include "RtStartTimeModule.h"
#include "TrackRtStartTimeVersion.h"
#include "TcTimeConversion.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif
DEFINE_THIS_FILE()

///////////////////////////////////////////////////////////////////////////////
// Collection of interfaces implemented by module CRtStartTimeModule
BEGIN_INTERFACE_MAP(CRtStartTimeModule)
	INTERFACE_ENTRY_ITCOMOBJECT()
	INTERFACE_ENTRY(IID_ITcADI, ITcADI)
	INTERFACE_ENTRY(IID_ITcWatchSource, ITcWatchSource)
///<AutoGeneratedContent id="InterfaceMap">
///</AutoGeneratedContent>
END_INTERFACE_MAP()

IMPLEMENT_IPERSIST_LIB(CRtStartTimeModule, VID_TrackRtStartTime, CID_TrackRtStartTimeCRtStartTimeModule)
IMPLEMENT_ITCOMOBJECT(CRtStartTimeModule)
IMPLEMENT_ITCOMOBJECT_SETSTATE_LOCKOP2(CRtStartTimeModule)
IMPLEMENT_ITCADI(CRtStartTimeModule)
IMPLEMENT_ITCWATCHSOURCE(CRtStartTimeModule)

///////////////////////////////////////////////////////////////////////////////
// Set parameters of CRtStartTimeModule 
BEGIN_SETOBJPARA_MAP(CRtStartTimeModule)
	SETOBJPARA_DATAAREA_MAP()
///<AutoGeneratedContent id="SetObjectParameterMap">
///</AutoGeneratedContent>
END_SETOBJPARA_MAP()

///////////////////////////////////////////////////////////////////////////////
// Get parameters of CRtStartTimeModule 
BEGIN_GETOBJPARA_MAP(CRtStartTimeModule)
	GETOBJPARA_DATAAREA_MAP()
///<AutoGeneratedContent id="GetObjectParameterMap">
///</AutoGeneratedContent>
END_GETOBJPARA_MAP()

///////////////////////////////////////////////////////////////////////////////
// Get watch entries of CRtStartTimeModule
BEGIN_OBJPARAWATCH_MAP(CRtStartTimeModule)
	OBJPARAWATCH_DATAAREA_MAP()
///<AutoGeneratedContent id="ObjectParameterWatchMap">
///</AutoGeneratedContent>
END_OBJPARAWATCH_MAP()

///////////////////////////////////////////////////////////////////////////////
// Get data area members of CRtStartTimeModule
BEGIN_OBJDATAAREA_MAP(CRtStartTimeModule)
///<AutoGeneratedContent id="ObjectDataAreaMap">
	OBJDATAAREA_VALUE(ADI_RtStartTimeModuleOutputs, m_Outputs)
///</AutoGeneratedContent>
END_OBJDATAAREA_MAP()


///////////////////////////////////////////////////////////////////////////////
// Constructor
CRtStartTimeModule::CRtStartTimeModule()
{
///<AutoGeneratedContent id="MemberInitialization">
	memset(&m_Outputs, 0, sizeof(m_Outputs));
///</AutoGeneratedContent>
}

///////////////////////////////////////////////////////////////////////////////
// Destructor
CRtStartTimeModule::~CRtStartTimeModule() 
{
}

///////////////////////////////////////////////////////////////////////////////
// State Transitions 
///////////////////////////////////////////////////////////////////////////////
IMPLEMENT_ITCOMOBJECT_SETOBJSTATE_IP_PI(CRtStartTimeModule)

///////////////////////////////////////////////////////////////////////////////
// State transition from PREOP to SAFEOP
//
// Initialize input parameters 
// Allocate memory
HRESULT CRtStartTimeModule::SetObjStatePS(PTComInitDataHdr pInitData)
{
	HRESULT hr = S_OK;
	IMPLEMENT_ITCOMOBJECT_EVALUATE_INITDATA(pInitData);
	return hr;
}

///////////////////////////////////////////////////////////////////////////////
// State transition from SAFEOP to OP
//
// Register with other TwinCAT objects
HRESULT CRtStartTimeModule::SetObjStateSO()
{
	HRESULT hr = S_OK;
	SYSTEM_TIME n_sysTime; // OsBase.h

	OsQuerySystemTime(n_sysTime); // OsBase.h
	m_Outputs.RtStartTime = *reinterpret_cast<unsigned long long*>(&n_sysTime);

	return hr;
}

///////////////////////////////////////////////////////////////////////////////
// State transition from OP to SAFEOP
HRESULT CRtStartTimeModule::SetObjStateOS()
{
	HRESULT hr = S_OK;
	return hr;
}

///////////////////////////////////////////////////////////////////////////////
// State transition from SAFEOP to PREOP
HRESULT CRtStartTimeModule::SetObjStateSP()
{
	HRESULT hr = S_OK;
	return hr;
}
